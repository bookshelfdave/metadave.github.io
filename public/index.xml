<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dave Parfitt&#39;s blog</title>
    <link>https://www.metadave.net/</link>
    <description>Recent content on Dave Parfitt&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Dave Parfitt</copyright>
    <lastBuildDate>Wed, 08 Mar 2017 09:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.metadave.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automatically locking a git crypt repo</title>
      <link>https://www.metadave.net/oldposts/git_crypt_autolock/</link>
      <pubDate>Wed, 08 Mar 2017 09:00:00 +0000</pubDate>
      
      <guid>https://www.metadave.net/oldposts/git_crypt_autolock/</guid>
      <description>I&amp;rsquo;ve been using Git Crypt with a few secure git repos at work. It works well and is easy to use.
The one thing that occasionally wakes me up in the middle of the night is wondering if I&amp;rsquo;ve locked a repo when I&amp;rsquo;m finished with it. To help with this issue, I threw together a quick bash function using at and wall. I use this on both Debian Linux and OSX.</description>
    </item>
    
    <item>
      <title>A Kubernetes-aware bash prompt</title>
      <link>https://www.metadave.net/oldposts/kubernetes_bash_prompt/</link>
      <pubDate>Fri, 06 Jan 2017 09:48:32 -0500</pubDate>
      
      <guid>https://www.metadave.net/oldposts/kubernetes_bash_prompt/</guid>
      <description>If you manage multiple Kubernetes deployments, this little trick can show you the current Kubernetes context as part of your bash prompt.
Edit your ~/.bash_profile or ~/.bashrc with the following:
function kube_context() { # could have used $?, but it was easier with a string compare local ctx=$(kubectl config current-context 2&amp;gt;&amp;amp;1) if [ &amp;quot;${ctx}&amp;quot; != &amp;quot;error: current-context is not set&amp;quot; ]; then echo -n &amp;quot;&amp;lt;${ctx}&amp;gt; &amp;quot; fi } Blue=&#39;\e[0;34m&#39; # Blue White=&#39;\e[0;37m&#39; # White BRed=&#39;\e[1;31m&#39; # Red IWhite=&#39;\e[0;97m&#39; # White LightBlue=&#39;\e[1;34m&#39; PS1=&amp;quot;\[$Blue\]\t\[$BWhite\]\[$LightBlue\] \$(kube_context)\[$BRed\]\[$BRed\]\w\[\033[m\]\[$IWhite\]\$(__git_ps1)\[$White\]\$ &amp;quot;  The snippet above yields the following prompt:</description>
    </item>
    
    <item>
      <title>Habitat .HART file deep dive</title>
      <link>https://www.metadave.net/oldposts/habitat_hart_deep_dive/</link>
      <pubDate>Wed, 04 Jan 2017 14:46:33 -0500</pubDate>
      
      <guid>https://www.metadave.net/oldposts/habitat_hart_deep_dive/</guid>
      <description></description>
    </item>
    
    <item>
      <title>QuickCheck &#43; Rust demo</title>
      <link>https://www.metadave.net/oldposts/quickcheck_rust/</link>
      <pubDate>Wed, 04 Jan 2017 14:46:33 -0500</pubDate>
      
      <guid>https://www.metadave.net/oldposts/quickcheck_rust/</guid>
      <description></description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://www.metadave.net/home/about/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.metadave.net/home/about/</guid>
      <description>Biography I am a software engineer in Buffalo, NY with a focus on backend + distributed systems. I currently work remotely for Mozilla as a Senior Site Reliability Engineer, where I design and run global cloud infrastructure for mozilla.org and MDN on Kubernetes. Previously, I worked at Chef, where I was a core engineer on Habitat and an engineering lead for Chef Analytics. I also worked at Basho on Riak multi data center replication.</description>
    </item>
    
    <item>
      <title>Habitat</title>
      <link>https://www.metadave.net/project/habitat/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.metadave.net/project/habitat/</guid>
      <description>Habitat is a new approach to automation that focuses on the application instead of the infrastructure it runs on. With Habitat, the apps you build, deploy, and manage behave consistently in any runtime — bare metal, VMs, containers, and PaaS. You&amp;rsquo;ll spend less time on the environment and more time building features.
Habitat is an open source project, and we’d love for you to get involved.</description>
    </item>
    
    <item>
      <title>Chef Analytics</title>
      <link>https://www.metadave.net/project/chef_analytics/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.metadave.net/project/chef_analytics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>erln8</title>
      <link>https://www.metadave.net/project/erln8/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.metadave.net/project/erln8/</guid>
      <description>erln8 is a Erlang version manager written in C.</description>
    </item>
    
    <item>
      <title>Riak OCaml Client</title>
      <link>https://www.metadave.net/project/riak-ocaml-client/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.metadave.net/project/riak-ocaml-client/</guid>
      <description>riak-ocaml-client is a Riak Protobuffs-only client for OCaml.</description>
    </item>
    
  </channel>
</rss>